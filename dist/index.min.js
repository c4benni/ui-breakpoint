"use strict";function _defineProperty(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}Object.defineProperty(exports,"__esModule",{value:!0}),exports.mediaListener=void 0;const mediaListener=({media:e,callback:t})=>{try{e.addEventListener("change",t)}catch(i){var n;if(/undefined is not a function/i.test(i.message))null==e||null===(n=e.addListener)||void 0===n||n.call(e,t)}};exports.mediaListener=mediaListener;const nextTick=async()=>await Promise.resolve(),setParseBreakpoints=(e,t)=>{const n=Object.entries(e).sort((e,t)=>{return parseInt(e[1])>parseInt(t[1])?1:-1}),i=[];return t&&i.push("<orientation>(orientation: landscape)"),n.forEach((e,t)=>{const a=e[0],r=parseInt(e[1]),o=parseInt((n[t+1]||[])[1]||"");i.push(`<${a}>(min-width:${r}px)${o?` and (max-width:${o-1}px)`:""}`)}),i};let parsedBreakpoints,installed=!1;function getBreakpointMediaName(e){var t,n,i,a;return(null===(t=e.match)||void 0===t?void 0:null===(n=t.call(e,/^<.+>/g))||void 0===n?void 0:null===(i=n[0])||void 0===i?void 0:null===(a=i.replace)||void 0===a?void 0:a.call(i,/<|>/g,""))||""}function updateBreakpointMediaListener(e){const t=e.name,n=/orientation/.test(t),i=e.matches,a=n?i?"landscape":"portrait":t,r=()=>{var t;n?this.output.orientation=a:this.output.is=a,null===(t=e.onChange)||void 0===t||t.call(e,this.output)};n?r():e.matches&&r()}function mounted(e){installed||parsedBreakpoints.forEach((t,n)=>{const i=window.matchMedia(t.replace(/^<.+>/g,"")),a=i.matches,r=getBreakpointMediaName(t);updateBreakpointMediaListener.call(this,{matches:a,name:r,index:n,onChange:e}),(0,exports.mediaListener)({media:i,callback:async t=>{await nextTick(),updateBreakpointMediaListener.call(this,{matches:t.matches,index:n,name:r,onChange:e})}})})}class BreakpointWrapper{constructor(e){_defineProperty(this,"output",{is:"",orientation:""});const{config:t,useOrientation:n,onChange:i}=e;if(!t)throw new Error("A config object of breakpoints must be defined. Eg {sm: 0, md: 960}");if(Object.keys(t).length<2)throw new SyntaxError("Config object must have at least 2 breakpoints");installed||(parsedBreakpoints=setParseBreakpoints(t,n||!1),mounted.call(this,i),Object.freeze(this),installed=!0)}get is(){return this.output.is}get orientation(){return this.output.orientation}}class Breakpoint{constructor(e){const t=new BreakpointWrapper(e);Object.defineProperty(this,"is",{get:()=>t.is}),t.orientation&&Object.defineProperty(this,"orientation",{get:()=>t.orientation})}}exports.default=Breakpoint;